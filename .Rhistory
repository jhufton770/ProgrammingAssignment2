q()
rm(oldpar)
rm(filepath)
rm(mm)
ls()
q()
x <- list(foo = 1:4, bar = 0.6, bax = "hello")
x[c(1,3)]
x[[$foo]]
x[[foo]]
x[["foo"]]
x[["bar"]]
x[["bax"]]
x[[1]]
x[[2]]
x[[3]]
name <- "foo"
x <- [[name]]
x[[name]]
x <- c(1,2,NA,4,5)
x
bad <- is.na(x)
bad
x[bad]
x[!bad]
help
help read.table
help(read.table)
dir()
gwdir()
gwdir
x <- 4
class(x)
x <- c(4, TRUE)
class(x)
x
x <- c(1,3, 5)
y <- c(3, 2, 10)
x
y
cbind(x, y)
class(cbind(x, y))
x <- list(2, "a", "b", TRUE)
[[x]]
x[[1]]
class(x[[1]])
x <- 1:4
y <- 2:3
x+y
class(x+y)
x <- c(3, 5, 1, 10, 12, 6)
x
x[x <= 5] <- 0
x
getwd()
setwd("/Volumes/DiskStation1/jhufton/MyDownload/Coursera/DataScientistsToolbox/RProgramming/DataSets")
dir()
read.csv("hw1_data.csv")
read.csv("hw1_data.csv")
setwd(/Users/jameshufton)
setwd("/Users/jameshufton")
hw1_data <- read.csv("/Volumes/DiskStation1/jhufton/MyDownload/Coursera/DataScientistsToolbox/RProgramming/DataSets/hw1_data.csv")
View(hw1_data)
hw1_data
hw1_data[1:10]
hw1_data[,1:10]
hw1_data[rows=1:10]
hw1_data[rows=1:10,]
hw1_data[1:10,]
hw1_data[1:2,]
hw1_data[152,153,]
hw1_data[152:153,]
hw1_data[:47,]
hw1_data[47:47,]
hw1_data[Ozone][47:47,]
hw1_data[47:47,Ozone]
hw1_data[47:47,"Ozone"]
hw1_data[,"Ozone"]
bad <- is.na(hw1_data[,"Ozone"])
bad
hw1_data[,"Ozone"][bad]
hw1_data[,"Ozone"][!bad]
mean(hw1_data[,"Ozone"][!bad])
x <- hw1_data[,"Ozone" > 31]
x
class(x)
hw1_data[]
hw1_data[][!bad]
hw1_data[,!bad]
hw1_data[,][!bad]
hw1_data[,1:7][!bad]
hw1_data[!bad,]
hw1_data[!bad,"Ozone"]
mean(hw1_data[!bad,"Ozone"])
x <- hw1_data[,"Ozone" > 31, "Temp" > 90]
x
x <- hw1_data[,"Ozone" > 31 & "Temp" > 90]
x
good <- hw1_data[!bad,"Ozone"]
good
good <- hw1_data[!bad,]
good
ozone <- good[, "Ozone" > 31]
ozone
ozone <- good[, $1 > 31]
ozone <- good[, 1 > 31]
ozone
ozone <- good[, $Ozone > 31]
good
good["Ozone" > 31]
good[$Ozone > 31]
good["Ozone" > 31,]
good[["Ozone" > 31],]
good[["Ozone" > 31]]
good[[$Ozone > 31]]
good[$Ozone > 31]
good[$Ozone > 31,]
good
good[1]
good[1 > 31]
good["Ozone" > 31]
class(good["Ozone"])
good["Ozone"]
good["Ozone"] > 31
x <- good["Ozone"] > 31
x
ozone <- good[x,]
ozone
y <- ozone["Temp"] >90
y
ozone_temp <- ozone[y,]
ozone_temp
y
ozone_temp
mean(ozone_temp[,"Solar.R"])
may <- good["Month"] == 5
may
may_temp <- good[may,]
may_temp
mean(may_temp[,"Temp"])
june <- good["Month"] == 6
june
june_temp <- good[june,]
june_temp
mean(june_temp[,"Temp"])
june <- hw1_data["Temp"] == 6
june
june <- hw1_data["Month"] == 6
june
june_temp <- hw1_data[june,]
june_temp
mean(june_temp[,"Temp"])
may
may_ozone <- good[may,]
may_ozone
mean(may_ozone[,"Ozone"])
max(may_ozone[,"Ozone"])
mean(ozone_temp[,"Solar.R"])
good
mean(good["Ozone"])
mean(good[,"Ozone"])
count()
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x
x[[1]]
x <- 1:4
y <- 2:3
x+y
x <- c(3, 5, 1, 10, 12, 6)
x
x[x == 0] <- 6
x
y <- x[x == 0] <- 6
y
y <- x[x < 6] <- 0
y
x
x <- c(3, 5, 1, 10, 12, 6)
x
x[x < 6] <- 0
x
hw1-data[1:2,]
hw1_data[1:2,]
tail(hw1_data)
hw1_data[47:47,]
help(dput)
help(dump)
q()
getwd()
savehistory("~/RCmdHistory.Rhistory")
hw1_data[47:47,"Ozone"]
hw1_data[,"Ozone"]
hw1_data[,"Ozone]"][bad]
hw1_data[bad,"Ozone]"]
bad
hw1_data[bad,"Ozone"]
hw1_data[!bad,"Ozone"]
hw1_data[!bad,]
mean(hw1_data[!bad,"Ozone"])
good
good["Ozone"] > 31
good["Ozone"] > 31
q()
library(swirl)
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0, 10)
c(1,2,3,4) + c(0, 10, 100)
z * 2 + 1000
my_div
1:20
pi:10
15:1
$`:`
?`:`
seq(1, 20)
seq(0, 10. by=0.5)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
?seq
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Jim")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
q()
library(swirl)
swirl
swirl()
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
info
info()
my_vector <- (1:20)
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(c(1:20), nrow = 4, ncol = 5, byrow = FALSE)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_dataframe) <- cnames
colnames(my_data) <- cnames
my_data
q()
library(swirl)
swirl()
head(floags)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_list <- sapply(flags, class)
info()
cls_list <- lapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags(, 11:17)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flags, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
q()
setwd("/Volumes/DiskStation1/jhufton/MyDownload/ProgrammingAssignment2")
my_matrix <- matrix(c(1,2,3,4), nrow=2, ncol=2)
my_matrix
my_inverted_matrix <- solve(my_matrix)
my_inverted_matrix
solve(my_inverted_matrix)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinvert <- function(solve) m <<- solve
getinvert <- function() m
list(set = set, get = get,
setinvert = setinvert,
getinvert = getinvert)
}
makeCacheMatrix(my_matrix)
a <- makeCacheMatrix(my_matrix)
a$get
a$getinvert
a <- makeCacheMatrix(c(1,2,3,4), nrow=2, ncol=2)
a <- makeCacheMatrix((c(1,2,3,4), nrow=2, ncol=2))
a <- makeCacheMatrix(x = matrix(c(1,2,3,4), nrow=2, ncol=2))
get$a
a$get
a$get()
a$getinvert()
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinvert()
if (is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinvert(m)
m
}
cacheSolve(a)
a
a$get()
a$getinvert()
data <- x$get()
m <- solve(data, ...)
x$setinvert(m)
m
x$get()
data <- a$get
m <- solve(data, ...)
m <- solve(data)
class m
class(m)
class(solve(data))
solve(data)
class(data)
m
class(a$get())
data <- a$get()
data
class(data)
m <- solve(data)
m
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinvert()a$getinvert()
if (is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data)
x$setinvert(m)
m
}
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinvert()
if (is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data)
x$setinvert(m)
m
}
a
a$get()
cacheSolve(a)
a$getinvert()
m <- a$getinvert()
m
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinvert()
if (!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data)
x$setinvert(m)
m
}
cacheSolve(a)
cacheSolve(a)
x
dir()
rm(x)
m
rm(m)
rm(a)
rm(x)
a <- makeCacheMatrix(x = matrix(c(1,2,3,4), nrow=2, ncol=2))
a
a$get()
ls(environment(makeCacheMatrix))
get("a", environment(makeCacheMatrix))
ls(environment(cacheSolve))
get("a", environment(cacheSolve))
p <- matrix(c(1:15), nrows=5, ncols=3)
p <- matrix(c(1:16), nrow=4, ncol=4)
p
solve(p)
z <- matrix(c(1,2,3,4), nrow=2, ncol=2)
z
solve(z)
p
solve(p)
p <- matrix(c(17:32), nrow=4, ncol=4)
p
solve(p)
p <- matrix(c(1,3,4,5,6,78,99,88,39,10,22,25,52,57,198,111), nrow=4, ncol=4)
p
solve(p)
makeCacheMatrix(p)
p$get()
x$get()
a <- makeCacheMatrix(p)
a$get()
cacheSolve(a)
cacheSolve(a)
q()
